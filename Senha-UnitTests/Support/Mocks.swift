///
/// @Generated by Mockolo
///



import Combine
import Foundation
@testable import Senha


class GeneratePasswordMutablePresentableMock: GeneratePasswordMutablePresentable {
    init() { }


    private(set) var updateCallCount = 0
    var updateArgValues = [Password]()
    var updateHandler: ((Password) -> ())?
    func update(password: Password)  {
        updateCallCount += 1
        updateArgValues.append(password)
        if let updateHandler = updateHandler {
            updateHandler(password)
        }
        
    }

    private(set) var handleCallCount = 0
    var handleArgValues = [GeneratorError]()
    var handleHandler: ((GeneratorError) -> ())?
    func handle(error: GeneratorError)  {
        handleCallCount += 1
        handleArgValues.append(error)
        if let handleHandler = handleHandler {
            handleHandler(error)
        }
        
    }
}

class CharacterGatewayableMock: CharacterGatewayable {
    init() { }


    private(set) var letterCallCount = 0
    var letterHandler: (() -> (String))?
    func letter() -> String {
        letterCallCount += 1
        if let letterHandler = letterHandler {
            return letterHandler()
        }
        return ""
    }

    private(set) var symbolCallCount = 0
    var symbolHandler: (() -> (String))?
    func symbol() -> String {
        symbolCallCount += 1
        if let symbolHandler = symbolHandler {
            return symbolHandler()
        }
        return ""
    }

    private(set) var numberCallCount = 0
    var numberHandler: (() -> (String))?
    func number() -> String {
        numberCallCount += 1
        if let numberHandler = numberHandler {
            return numberHandler()
        }
        return ""
    }
}

class GeneratePasswordInteractableMock: GeneratePasswordInteractable {
    init() { }


    private(set) var generateCallCount = 0
    var generateArgValues = [PasswordOptions]()
    var generateHandler: ((PasswordOptions) -> ())?
    func generate(with passwordOptions: PasswordOptions)  {
        generateCallCount += 1
        generateArgValues.append(passwordOptions)
        if let generateHandler = generateHandler {
            generateHandler(passwordOptions)
        }
        
    }
}

